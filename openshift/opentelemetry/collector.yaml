apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: dev
  namespace: dev-quarkus-example
spec:
  config:
    #extensions:
    #  bearertokenauth:
    #    filename: "/var/run/secrets/kubernetes.io/serviceaccount/token"

    receivers:
      otlp:
        protocols:
          grpc:
          http:
      jaeger:
        protocols:
          thrift_binary:
          thrift_compact:
          thrift_http:
          grpc:

    processors:

    exporters:
      debug: {}
      otlp:
        endpoint: tempo-simplest-gateway:8090
        tls:
          insecure: true
          #ca_file: "/var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt"
        #auth:
        #  authenticator: bearertokenauth
        headers:
          X-Scope-OrgID: "dev"

    service:
      #extensions: [bearertokenauth]
      pipelines:
        traces:
          receivers: [otlp, jaeger]
          exporters: [otlp]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tempostack-traces-write
rules:
  - apiGroups:
      - 'tempo.grafana.com'
    resources:
      - dev
    resourceNames:
      - traces
    verbs:
      - 'create'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tempostack-traces
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tempostack-traces-write
subjects:
  - kind: ServiceAccount
    name: dev-collector
    namespace: dev-quarkus-example